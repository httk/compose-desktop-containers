version: "3.8"

x-application:

  readme: |
    Blender: 3D computer graphics software tool.

  override-default: |
    version: "3.8"

    services:
      blender:
        volumes:
          - "${HOME}/Documents/containers/3d-projects:/home/${USER}/Documents/containers/3d-projects"
        working_dir: "/home/${USER}/Documents/containers/3d-projects"

  env-default: |
    # This container has no configurable options

x-launchers:
  download:
    service: setup
    type: setup
    script: &download_script
      - echo "DOWNLOAD"
      - mkdir -p Downloads
      - THANKSURL="$$(curl -L 'https://www.blender.org/download/' | cat | sed -n '\|^.*"\(https://www.blender.org/download/release/Blender[0-9.]\+/blender-[0-9.]\+-linux-x64.tar.xz[^\"]*\)".*$$|{s||\1|p;q}')"
      - LATESTURL="$$(curl -L "$$THANKSURL" | cat | sed -n '\|^.*"\(https:.*/Blender[0-9.]\+/blender-[0-9.]\+-linux-x64.tar.xz\)".*$$|{s||\1|p;q}')"
      - LATESTFILENAME="$${LATESTURL##*/}"
      - if [ -z "$$LATESTFILENAME" ]; then
          echo "Failed to determine latest version.";
          exit 1;
        fi;
      - curl -L -o Downloads/$$LATESTFILENAME "$$LATESTURL" && ln -sf $$LATESTFILENAME Downloads/blender-latest-linux-x64.tar.xz

  redownload:
    service: setup
    type: setup
    script: &redownload_script
      - echo "REDOWNLOAD"
      - rm -f "$$(readlink -f Downloads/blender-latest-linux-x64.tar.xz)"
      - rm -f Downloads/blender-latest-linux-x64.tar.xz
      - *download_script

  install:
    service: setup-nonet
    type: setup
    script: &install_script
      - VERSION="$${1:-blender-latest-linux-x64.tar.xz}";
      - echo "INSTALL $$VERSION";
      - rm -rf ~/.local/share/blender &&
        mkdir ~/.local/share/blender &&
        cd ~/.local/share/blender &&
        tar -xf ~/Downloads/blender-latest-linux-x64.tar.xz &&
        mv blender-* blender &&
        mkdir -p ~/.local/share/applications &&
        cp blender/blender.desktop ~/.local/share/applications/blender.desktop &&
        sed -i 's%^Exec=.*$$%Exec=/home/$${USER}/install/blender/blender%'  ~/.local/share/applications/blender.desktop

  reinstall:
    service: setup-nonet
    type: setup
    script: &reinstall_script
      - VERSION="$${1:-blender-latest-linux-x64.tar.xz}";
      - echo "REINSTALL $$VERSION"
      - rm -rf ~/.local/share/blender
      - *install_script

  update-check:
    service: setup
    type: setup
    script:
      - echo "UPDATE CHECK"
      - THANKSURL="$$(curl -L -N 'https://www.blender.org/download/' | cat | sed -n '\|^.*"\(https://www.blender.org/download/release/Blender[0-9.]\+/blender-[0-9.]\+-linux-x64.tar.xz[^\"]*\)".*$$|{s||\1|p;q}')"
      - LATESTURL="$$(curl -L -N "$$THANKSURL" | sed -n '\|^.*"\(https:.*/Blender[0-9.]\+/blender-[0-9.]\+-linux-x64.tar.xz\)".*$$|{s||\1|p;q}')"
      - LATESTFILENAME="$${LATESTURL##*/}";
      - if [ -z "$$LATESTFILENAME" ]; then
          echo "Failed to determine latest version.";
          exit 1;
      - fi
      - mkdir -p Downloads
      - if [ -e "Downloads/$$LATESTFILENAME" ]; then
          echo "No new version";
          exit 0;
        fi
      - echo "File missing, or server-side file newer"
      - exit 1

  update:
    service: setup
    type: setup
    script:
      - echo "UPDATE"
      - *redownload_script
      - *reinstall_script

  blender:
    service: run
    type: background
    script:
      - echo "BLENDER"
      - pipewire-pulse &
      - exec ~/.local/share/blender/blender/blender "$$@"

    desktop:
      file: |
        [Desktop Entry]
        Name=Blender (container)
        StartupWMClass=Blender
        PrefersNonDefaultGPU=true
        GenericName=3D modeler
        Comment=3D modeling, animation, rendering and post-production
        Exec=blender %f
        Terminal=false
        Type=Application
        Icon=blender
        Categories=Graphics;3DGraphics;
        MimeType=application/x-blender;
        Keywords=3d;cg;modeling;animation;painting;sculpting;texturing;video editing;video tracking;rendering;render engine;cycles;python;

      icons:
        - source: blender.svg
          dest: blender.svg

  interactive:
    service: run
    console: true
    script:
      - echo "INTERACTIVE"
      - bash

services:

  ## COMMON PART ##

  common: &common

    image: "cdc-u24"

    entrypoint: ["/bin/tini", "/bin/bash", "--", "-c", "$$(printf \"%s\\n\" \"$@\"); sleep infinity"]

    network: none

    working_dir: /home/${USER}
    user: "${USER}"

    environment: &common-env
      LANG: "${LANG}"
      XDG_RUNTIME_DIR: "/tmp/${USER}/run"
      XDG_CURRENT_DESKTOP: "${XDG_CURRENT_DESKTOP}"
      DESKTOP_SESSION: "${DESKTOP_SESSION}"

    cap_drop:
      - ALL

    security_opt:
      - no-new-privileges

    read_only: true
    tmpfs:
      - /tmp
      - /run

    shm_size: "1G"

    volumes: &common-volumes
      - "${CDC_APP_PATH}/home:/home/${USER}:rw"

    devices:
      - "/dev/dri:/dev/dri"

    security_opt:
      - no-new-privileges

    userns_mode: "keep-id"

    network_node: none


  setup:
    <<: *common

    network_mode: bridge

  setup-nonet:
    <<: *common

  run:
    <<: *common

    network_node: bridge
    read_only: false

    user:
      root

    x-features:
      - wayland-fallback-x11
