version: "3.8"

x-application:

  readme: |
    Slack: cloud-based team communication platform

    Use together with legacy-screenshare-helper (https://github.com/httk/legacy-screenshare-helper)
    to support screensharing.

  override-default: |
    version: "3.8"

    # Comment out as desired below to give slack access to dbus session and/or system bus
    #
    #services:
    #  slack:
    #    volumes:
    #      - "${CDC_DBUS_PATH}:/tmp/${USER}/run/bus:rw"
    #      - "${CDC_DBUS_SYSTEM_BUS_PATH}:/run/dbus/system_bus_socket:rw"
    #    environment:
    #      DBUS_SESSION_BUS_ADDRESS: "unix:path=/tmp/${USER}/run/bus"
    #      DBUS_SYSTEM_BUS_ADDRESS: "unix:path=/run/dbus/system_bus_socket"
    #    x-launcher:
    #      dbus-proxy: --filter
    #      dbus-system-proxy: --filter
    #

  env-default: |
    # No configurable options


services:

  ## COMMON PART ##

  common: &common

    image: "desktop-container-default"

    working_dir: /home/$USER
    user: "${USER}"

    environment: &common-env
      LANG: "${LANG}"
      XDG_RUNTIME_DIR: "${XDG_RUNTIME_DIR}"
      XDG_DATA_DIRS: "${XDG_DATA_DIRS}"
      XDG_CURRENT_DESKTOP: "GNOME"
      BROWSER: "falkon"
      TERM: "xterm"
      XTERM_LOCALE: "en_US.UTF-8"
      XTERM_SHELL: "/usr/bin/bash"
      DISPLAY: "${DISPLAY}"
      XAUTHORITY: "${XAUTHORITY}"

    cap_drop:
      - ALL
    cap_add:
      - SYS_CHROOT

    security_opt:
      - no-new-privileges

    read_only: true
    tmpfs:
      - /tmp
      - /run

    shm_size: "1G"

    volumes: &common-volumes
      - "${CDC_APP_DIR}/home:/home/${USER}:rw"
      - "/tmp/.X11-unix:/tmp/.X11-unix:rw"
      - "${XAUTHORITY}:${XAUTHORITY}:rw"
      - "${XDG_RUNTIME_DIR}/pipewire-0:/tmp/${USER}/run/pipewire-0:rw"

    devices:
      - "/dev/dri:/dev/dri"
      - "/dev/snd:/dev/snd"

    security_opt:
      - "label=disable"

    userns_mode: "keep-id"


  ## INSTALL ##
  
  download: &download
    <<: *common

    command:
      - echo "INSTALL PREPARE"
      - mkdir -p Downloads
      - LATESTURL="$$(curl -L 'https://slack.com/downloads/instructions/linux?ddl=1&build=deb' | sed -n 's|^.*src="\(https://downloads.slack-edge.com/desktop-releases/linux/x64/[^/]*/[^/]*-amd64.deb\).*$$|\1|p')"
      - LATESTFILENAME="$${LATESTURL##*/}"
      - if [ -z "$$LATESTFILENAME" ]; then
          echo "Failed to determine latest version.";
          exit 1;
        fi;
      - curl -L -o Downloads/$$LATESTFILENAME "$$LATESTURL" && ln -sf $$LATESTFILENAME Downloads/slack-latest-amd64.deb

  install: &install
    <<: *common 

    command:
      - VERSION="$${1-slack-latest-amd64.deb}";
      - echo "INSTALL $$VERSION";
      - rm -rf ~/Installation &&
        mkdir ~/Installation &&
        cd ~/Installation &&
        dpkg-deb -x ~/Downloads/"$$VERSION" slack &&
        mkdir -p ~/.local/share/applications ~/.local/share/icons/hicolor/256x256/apps &&
        cp slack/usr/share/applications/slack.desktop ~/.local/share/applications/slack.desktop &&
        sed -i 's%/usr/bin/slack%/home/$USER/Installation/slack/usr/bin/slack%' ~/.local/share/applications/slack.desktop &&
        cp "slack/usr/share/pixmaps/slack.png" ~/.local/share/icons/hicolor/256x256/apps/slack.png &&
        gtk-update-icon-cache -f -t ~/.local/share/icons/hicolor &&
        update-desktop-database ~/.local/share/applications/ 

  ## UPDATE ##

  update-check: &update-check
    <<: *common 

    command: 
      - echo "UPDATE CHECK"
      - LATESTURL="$$(curl -L 'https://slack.com/downloads/instructions/linux?ddl=1&build=deb' | sed -n 's|^.*src="\(https://downloads.slack-edge.com/desktop-releases/linux/x64/[^/]*/[^/]*-amd64.deb\).*$$|\1|p')"
      - LATESTFILENAME="$${LATESTURL##*/}";
      - if [ -z "$$LATESTFILENAME" ]; then
          echo "Failed to determine latest version.";
          exit 1;
      - fi
      - mkdir -p Downloads
      - if [ -e "Downloads/$$LATESTFILENAME" ]; then
          echo "No new version";
          exit 0;
        fi
      - echo "File missing, or server-side file newer"
      - exit 1

  update: &update
    <<: *install 


  ## EXECUTE ###

  slack:
    <<: *common

    container_name: cdc_slack_slack

    command: 
      - echo "SLACK"
      - cd Installation/slack
      - pipewire-pulse &
      - exec usr/bin/slack "$$@"

    x-launcher:

      # slack in x11 mode does not need dbus?
      #dbus-proxy: ""
      
      devices:
        - video

      desktop:

        file: |
          [Desktop Entry]
          Name=Slack (container)
          StartupWMClass=Slack
          Comment=Slack Desktop
          GenericName=Slack Client for Linux
          Exec=slack
          Icon=slack
          Type=Application
          StartupNotify=true
          Categories=Network;InstantMessaging;
          MimeType=x-scheme-handler/slack;
          
        icons:
          - source: .local/share/icons/hicolor/256x256/apps/slack.png
            size: 256
            dest: slack.png


  ## INTERACTIVE ##

  interactive:
    <<: *common

    command:
      - echo "INTERACTIVE"
      - bash
