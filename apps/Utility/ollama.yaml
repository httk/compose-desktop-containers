version: "3.8"

x-application:

  readme: |
    python-develop: bare-bones console with access to host network
    for Python development.

  override-default: |
    version: "3.8"

    # Comment out as desired below to give slack access to dbus session and/or system bus
    #
    #services:
    #  slack:
    #    x-app-features:
    #      - dbus-proxy: --filter
    #      - dbus-system-proxy: --filter

  env-default: |
    # No configurable options

  images:
    u24:
      pkgs:
        - cmake



services:

  ## COMMON PART ##

  common: &common

    image: "cdc-u24"

    working_dir: /home/${USER}
    user: "${USER}"

    environment: &common-env
      LANG: "${LANG}"
      XDG_RUNTIME_DIR: "/tmp/${USER}/run"
      XDG_CURRENT_DESKTOP: "${XDG_CURRENT_DESKTOP}"

    cap_drop:
      - ALL

    security_opt:
      - no-new-privileges

    read_only: false
    tmpfs:
      - /tmp
      - /run

    shm_size: "1G"

    volumes: &common-volumes
      - "${COMPOSE_PATH?Setting COMPOSE_PATH is required.}/home:/home/${USER}:rw"

    devices:
      - "/dev/dri:/dev/dri"

    security_opt:
      - no-new-privileges

    userns_mode: "keep-id"

  ## INSTALL ##

  download:
    <<: *common

    x-launch-script: &download_script
      - echo "DOWNLOAD"
      - mkdir -p Downloads
      - VERSION="$$(curl -s https://api.github.com/repos/ollama/ollama/releases/latest | jq --raw-output '.name')"
      - LATESTURL="$$(curl -s https://api.github.com/repos/ollama/ollama/releases/latest | jq --raw-output '.assets[] | .browser_download_url' | grep ollama-linux-amd64.tgz)"
      - LATESTFILENAME="ollama-linux-amd64-$$VERSION.tgz"
      - |
        if [ ! -e "Downloads/$$LATESTFILENAME" ]; then
          curl -L -o "Downloads/$$LATESTFILENAME" "$$LATESTURL"
        fi
      - ln -sf "$$LATESTFILENAME" Downloads/ollama-linux-amd64-latest.tgz

  redownload:
    <<: *common

    x-launch-script: &redownload_script
      - echo "REDOWNLOAD"
      - mkdir -p Downloads
      - VERSION="$$(curl -s https://api.github.com/repos/ollama/ollama/releases/latest | jq --raw-output '.name')"
      - LATESTURL="$$(curl -s https://api.github.com/repos/ollama/ollama/releases/latest | jq --raw-output '.assets[] | .browser_download_url' | grep ollama-linux-amd64.tgz)"
      - LATESTFILENAME="ollama-linux-amd64-$$VERSION.tgz"
      - rm -rf "Downloads/$$LATESTFILENAME" Downloads/ollama-linux-amd64-latest.tgz
      - *download_script

  install:
    <<: *common

    x-launch-script: &install_script
      - VERSION="$${1:-ollama-linux-amd64-latest.tgz}";
      - echo "INSTALL $$VERSION"; 
      - |
        if [ ! -e ~/.local/share/ollama ]; then
          mkdir -p ~/.local/share/ollama
          cd ~/.local/share/ollama
          tar -zxf ~/Downloads/"$$VERSION"
        fi

  reinstall:
    <<: *common

    x-launch-script: &reinstall_script
      - VERSION="$${1:-ollama-linux-amd64-latest.tgz}"
      - echo "REINSTALL $$VERSION" 
      - rm -rf ~/.local/share/ollama
      - *install_script

  ## UPDATE ##

  update-check:
    <<: *common

    command:
      - echo "UPDATE CHECK"
      - VERSION="$$(curl -s https://api.github.com/repos/ollama/ollama/releases/latest | jq --raw-output)"
      - LATESTFILENAME="ollama-linux-amd64-$$VERSION.tgz"
      - mkdir -p Downloads
      - if [ -e "Downloads/$$LATESTFILENAME" ]; then
          echo "No new version";
          exit 0;
        fi
      - echo "File missing, or server-side file newer"
      - exit 1

  update:
    <<: *common

    x-launch-script:
      - echo "UPDATE"
      - *redownload_script
      - *reinstall_script

  ## EXECUTE ###

  ollama-serve:
    <<: *common

    ports:
      - "11434"

    command:
      - echo "ollama-serve"
      - printf "+%s+\n" "$@"
      #- OLLAMA_HOST=0.0.0.0:11434 ~/.local/share/ollama/bin/ollama serve

    environment:
      <<: *common-env
      CDC_LAUNCH_ARGS: "\"test me\" more"
    

    entrypoint:
      - "/home/$USER/cdc-launch"

    stdin_open: true
    tty: true

    x-application:
      container_name: cdc_ollama_ollama
      interactive: true

  ollama:
    <<: *common

    x-launch-script:
      - echo "ollama"
      - ~/.local/share/ollama/bin/ollama "$@"

    x-application:
      container_name: cdc_ollama_ollama
      interactive: true


  ## INTERACTIVE ##

  interactive:
    <<: *common

    x-application:
      container_name: cdc_ollama_ollama
      interactive: true

    x-launch-script:
      - echo "INTERACTIVE"
      - bash
