#!/bin/bash

set -e

IMAGE="u24"

SCRIPTPATH="$(dirname -- "$(realpath -- "$0")")"
IMAGE_DIR="$(realpath -- "$SCRIPTPATH/../images")"
CDC_CONFIG_DIR="${XDG_CONFIG_HOME:-$HOME/.config}/cdc"
TOOLPATH="$(dirname -- "${SCRIPTPATH}")/tools"

if [ -z "$USER" -o -z "$UID" -o -z "$LANG" ]; then
    echo "The following env variables must be set: USER, UID, LANG"
    exit 1
fi

# The sed 's/.utf8/.UTF-8/' fixes incorrectly specified locales from pre-GNOME 3.18 I think.
LOCALES="$(locale -a | grep -v "POSIX" | sed 's/.utf8/.UTF-8/' | tr '\n' ' ')"

PKGS_FILES=""
PKGS_NORECS_FILES=""
COMMANDS_FILES=""
PRECOMMANDS_FILES=""

CDC_CONFIG_DIR="${XDG_CONFIG_HOME:-$HOME/.config}/cdc"
rm -rf "$CDC_CONFIG_DIR/image-u24/build"
mkdir -p "$CDC_CONFIG_DIR/image-u24"/{build/files,requested,installed}

# Collect necessary files to build the image in files/
cp "$TOOLPATH/image/en_SE.locale" "$CDC_CONFIG_DIR/image-u24/build/files/."
cp /etc/timezone "$CDC_CONFIG_DIR/image-u24/build/files/."

cd "$CDC_CONFIG_DIR/image-u24/build"

cat > Containerfile <<EOF
FROM ubuntu:24.04
ENV DEBIAN_FRONTEND=noninteractive
COPY files/timezone /etc/timezone
EOF

# Handle that /etc/localtime both can be a symlink or a file, and re-do the symlink in the container
LOCALTIME=$(readlink /etc/localtime)
if [ -n "$LOCALTIME" ]; then
    TZ_LOCATION="${LOCALTIME##*/}"
    TZ_AREA="${LOCALTIME%/*}"
    TZ_AREA="${TZ_AREA##*/}"
    echo "RUN ln -sf \"/usr/share/zoneinfo/${TZ_AREA}/${TZ_LOCATION}\" /etc/localtime" >> Containerfile
else
    cp /etc/localtime files/localtime
    echo "RUN rm -f /etc/localtime" >> Containerfile
    echo "COPY files/localtime /etc/localtime" >> Containerfile
fi

# Google Chrome is necessary to support installation of progressive-web-apps (PWA)
cat >> Containerfile <<EOF
RUN apt-get update && apt-get -y dist-upgrade && apt-get install -y --reinstall ca-certificates locales wget
COPY ./files/en_SE.locale /tmp/en_SE.locale
RUN test ! -e /usr/share/i18n/locales/en_SE && cp /tmp/en_SE.locale /usr/share/i18n/locales/en_SE && localedef -i en_SE -f UTF-8 en_SE.UTF-8 && echo "# en_SE.UTF-8 UTF-8" >> "/etc/locale.gen" && echo "en_SE.UTF-8 UTF-8" >> "/usr/share/i18n/SUPPORTED"
RUN locale-gen ${LOCALES} && update-locale "LANG=$LANG" && rm -f /tmp/en_SE.locale
ENV LANG $LANG
RUN groupadd -r -g 5000 build && useradd -m -u 5000 -g 5000 -c "Build user" "build"
RUN wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb && apt -y install ./google-chrome-stable_current_amd64.deb && rm -f google-chrome-stable_current_amd64.deb
EOF

FULLNAME="$(getent passwd rar | awk -F':' '{print $5}')"

if [ ! -e  "$CDC_CONFIG_DIR/image-u24/requested/default/52-commands-user.disabled" ]; then
  # We need to handle the user part differently depending on if it overlaps the default 1000 user or not.
  if [ "$UID" == "1000" ]; then

    cat >> Containerfile <<EOF
RUN usermod -l "$USER" ubuntu && groupmod -n "$USER" ubuntu && usermod -d "/home/$USER" -m "$USER" && usermod -c "$FULLNAME" "$USER"
EOF

  else

    cat >> Containerfile <<EOF
RUN groupadd -r -g "$UID" "$USER" && useradd -m -u "$UID" -g "$UID" -c "$FULLNAME" "$USER"
EOF

  fi
  cat >> "$CDC_CONFIG_DIR/image-u24/requested/default/52-commands-user" <<EOF
RUN mkdir -p /tmp/$USER && chown "$USER:$USER" "/tmp/$USER" && chmod 0700 "/tmp/$USER" && mkdir -p "/tmp/$USER/run" && chown "$USER:$USER" "/tmp/$USER/run" && chmod 0700 "/tmp/$USER/run" && mkdir -p /run/user && ln -nsf "/tmp/$USER/run" "/run/user/${UID}"
EOF
fi

podman build --squash-all -t cdc-u24 --label=wrap .
podman image prune -f --filter label=wrap

rm -rf "$CDC_CONFIG_DIR/image-u24/installed"
cp -rp "$CDC_CONFIG_DIR/image-u24/requested" "$CDC_CONFIG_DIR/image-u24/installed"

echo "First run of new container (this may take a long time as podman may need to remap uid/gid manually)"
podman run --rm -w "/home/$USER" --user="$USER" --shm-size=1G --cap-drop=ALL --read-only --read-only-tmpfs --userns=keep-id --name "cdc_test_u24" cdc-u24 echo "Container finished."

