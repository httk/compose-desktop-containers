version: "3.8"

x-application:

  readme: |
    Zoom: videotelephony software program.

    This container uses the x11 server on your desktop (i.e., likely xwayland if you are
    running Wayland), which is not great from a security barrier perspective. Zoom has support
    to run directly under wayland, but in present versions this support seem to cause issues
    (crashes, incomplete user interface, etc.), which is probably why current versions of Zoom
    at the time of writing this defaults to x11 even if Wayland is available.

    Use together with legacy-screenshare-helper (https://github.com/httk/legacy-screenshare-helper)
    to support screensharing.

  override-default: |
    version: "3.8"

    services:
      run:
         volumes:
           - "${HOME}/Documents/containers/meetings:/home/${USER}/Documents/containers/meetings"
         working_dir: "/home/${USER}/Documents/containers/meetings"

  images:
    u24:
      pkgs: ["libglib2.0-0", "libxcb-keysyms1", "libdbus-1-3", "libxcb-shape0", "libpulse0", "libxcb-xinerama0",
             "libxcb-shm0", "libxcb-xfixes0", "libxcb-randr0", "libxcb-image0", "libfontconfig1", "libxi6",
             "libsm6", "libxrender1", "libxcomposite1", "libxslt1.1", "libsqlite3-0", "libxcb-xtest0",
             "libxtst6", "ibus", "libxkbcommon-x11-0", "desktop-file-utils", "libgbm1", "libdrm2",
             "libxcb-cursor0", "libxcb-icccm4", "libatomic1", "libfreetype6", "libgbm1"]

  env-default: |
    # No configurable options

x-launchers:
  download:
    service: setup
    type: setup

    # Zoom doesn't keep track of versions via filenames. TODO: implement handling of this so old versions are kept.
    script: &download_script
      - echo "DOWNLOAD"
      - mkdir -p Downloads
      - curl -L -o Downloads/zoom_amd64.deb "https://zoom.us/client/latest/zoom_amd64.deb"

  redownload:
    service: setup
    type: setup
    script: &redownload_script
      - echo "REDOWNLOAD"
      - rm -rf Downloads/zoom_amd64.deb
      - *download_script

  install:
    service: setup-nonet
    type: setup
    script: &install_script
      - VERSION="$${1:-zoom_amd64.deb}";
      - echo "INSTALL $$VERSION";
      - mkdir -p ~/.local/share/icons/hicolor/256x256/apps/ &&
        rm -rf ~/.local/share/zoom &&
        mkdir ~/.local/share/zoom &&
        cd ~/.local/share/zoom &&
        mkdir tmp &&
        cd tmp &&
        ar x ~/Downloads/"$$VERSION" &&
        tar -xf data.tar.xz &&
        cp ./usr/share/pixmaps/Zoom.png ~/.local/share/icons/hicolor/256x256/apps/Zoom.png &&
        mv ./opt/zoom .. &&
        cd .. && rm -rf tmp &&
        mkdir -p ~/.local/share/applications &&
        echo -e "[Desktop Entry]\nName=ZoomLauncher\nComment=Zoom Video Conference\nExec=/home/${USER}/.local/share/zoom/zoom/ZoomLauncher %U\nTerminal=false\nType=Application\nCategories=Network;\nMimeType=x-scheme-handler/zoommtg;x-scheme-handler/zoomus;x-scheme-handler/tel;x-scheme-handler/callto;x-scheme-handler/zoomphonecall;\nX-KDE-Protocols=zoommtg;zoomus;tel;callto;zoomphonecall\nName[en_US]=ZoomLauncher" > ~/.local/share/applications/ZoomLauncher.desktop &&
        update-desktop-database ~/.local/share/applications/

  reinstall:
    service: setup-nonet
    type: setup
    script: &reinstall_script
      - VERSION="$${1:-zoom_amd64.deb}";
      - echo "REINSTALL $$VERSION"
      - rm -rf ~/.local/share/zoom
      - *install_script

  update-check:
    service: setup
    type: setup
    script: &update_check_script
      - echo "UPDATE CHECK"
      - mkdir -p Downloads
      - if [ -e Downloads/zoom_x86_64.tar.xz ]; then
          LASTMOD_LINE="$$(curl -sI -L "https://zoom.us/client/latest/zoom_x86_64.tar.xz" | grep -i '^last-modified:' | cut "-d:" -f2- | sed 's/^\s*\|\s$$//g')";
          if [ -z "$$LASTMOD_LINE" ]; then
            echo "Could not get last modified date";
            exit 0;
          fi;
          REMOTE_TS="$$(date -d "${LASTMOD_LINE}" +%s)";
          LOCAL_TS="$$(date -r "Downloads/zoom_x86_64.tar.xz" +%s)";
          if [ "$$REMOTE_TS" -lt "$$LOCAL_TS" ]; then
            echo "No new version";
            exit 0;
          fi;
        fi;
      - echo "File missing, or server-side file newer"
      - exit 1

  update:
    service: setup
    type: setup
    script:
      - echo "UPDATE"
      - *redownload_script
      - *reinstall_script

  zoom:
    service: run
    type: background
    script:
      - echo "ZOOM:" $${HOME}
      - sed -i 's/^xwayland=.*$/xwayland=true/g' ~/.config/zoomus.conf
      - pipewire-pulse &
      - /opt/zoom/ZoomLauncher "$$@"

    desktop:

      file: |
        [Desktop Entry]
        Name=Zoom (container)
        StartupWMClass=zoom
        Comment=Zoom Video Conference
        Exec=zoom %U
        Terminal=false
        Type=Application
        Icon=zoom
        Categories=Network
        MimeType=x-scheme-handler/zoommtg;x-scheme-handler/zoomus;x-scheme-handler/tel;x-scheme-handler/callto;x-scheme-handler/zoomphonecall;
        X-KDE-Protocols=zoommtg;zoomus;tel;callto;zoomphonecall

      icons:
        - source: Zoom.png
          dest: zoom.png


  zoom-force-wayland:
    service: run-wayland
    type: background
    script:
      - echo "ZOOM (FORCE WAYLAND):" $${HOME}
      - sed -i 's/^xwayland=.*$/xwayland=false/g' ~/.config/zoomus.conf
      - /opt/zoom/ZoomLauncher "$$@"

  interactive:
    service: run
    console: true
    script:
      - echo "INTERACTIVE"
      - bash


services:

  common: &common

    image: "cdc-u24"

    entrypoint: ["/cdc/entrypoint"]
    network_mode: none

    working_dir: /home/$USER
    user: "${USER}"

    environment: &common-env
      LANG: "${LANG}"
      XDG_RUNTIME_DIR: "/tmp/${USER}/run"
      XDG_CURRENT_DESKTOP: "${XDG_CURRENT_DESKTOP}"
      DESKTOP_SESSION: "${DESKTOP_SESSION}"

    cap_drop:
      - ALL

    cap_add:
      - SYS_CHROOT
      - CAP_SETUID
      - CAP_SETGID

    security_opt:
      - no-new-privileges

    read_only: true
    tmpfs:
      - /tmp
      - /run

    shm_size: "1G"

    volumes:
      - "${CDC_APP_PATH}/home:/home/${USER}:rw"

    devices:
      - "/dev/dri:/dev/dri"

    security_opt:
      - no-new-privileges

    userns_mode: "keep-id"

  setup:
    <<: *common

    network_mode: bridge

  setup-nonet:
    <<: *common

    network_mode: none

  run:
    <<: *common

    network_mode: bridge

    volumes:
      - "${CDC_APP_PATH}/home:/home/${USER}:rw"
      - "${CDC_APP_PATH}/home/.local/share/zoom/zoom:/opt/zoom:ro"

    x-features:
      - video
      - sound
      - x11

  run-wayland:
    <<: *common

    network_mode: bridge

    volumes:
      - "${CDC_APP_PATH}/home:/home/${USER}:rw"
      - "${CDC_APP_PATH}/home/.local/share/zoom/zoom:/opt/zoom:ro"

    x-features:
      - video
      - sound
      - wayland
      - dbus-proxy: --filter --own=org.kde.*

      # I think this is meant to be enough, but I cannot get it to work
      # --own=org.kde.StatusNotifierWatcher --own=org.kde.StatusNotifierItem --sloppy-names
      # --talk=org.kde.StatusNotifierWatcher.* --talk=org.freedesktop.StatusNotifierWatcher.* --talk=org.freedesktop.Notifications.* --call=org.freedesktop.portal.*=* --broadcast=org.freedesktop.portal.*=@/org/freedesktop/portal/*
      # --filter --call="org.freedesktop.portal.*=*" --talk=org.kde.StatusNotifierWatcher

