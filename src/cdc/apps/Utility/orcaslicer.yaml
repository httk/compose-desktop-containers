version: "3.8"

x-application:

  readme: |
    Orcaslicer: An open source slicer for FDM printers.

  override-default: |
    version: "3.8"

    services:
      run:
        volumes:
          - "${HOME}/Documents/containers/3d-projects:/home/${USER}/Documents/containers/3d-projects"
        working_dir: "/home/${USER}/Documents/containers/3d-projects"

  env-default: |
    # This container has no configurable options

x-launchers:
  download:
    service: setup
    type: setup
    script: &download_script
      - echo "DOWNLOAD"
      - mkdir -p ~/Downloads
      - LATESTURL="$$(curl -s https://api.github.com/repos/SoftFever/OrcaSlicer/releases/latest | jq --raw-output '.assets[] | .browser_download_url' | grep 'OrcaSlicer_.*_Ubuntu2404.*\.AppImage')"
      - |
        if [ "$LATESTURL" ]; then
          echo "Could not automatically determine latest version to download."
          echo "Download manually into home/Downloads, and then execute:"
          echo "  setup/download/<filename>"
          exit 1
        fi
      - LATESTFILENAME="$${LATESTURL##*/}"
      - VERSION="$${LATESTFILENAME#OrcaSlicer_Linux_Ubuntu2404_}"
      - VERSION="$${VERSION%.AppImage}"
      - curl -L -o ~/Downloads/"$$LATESTFILENAME" "$$LATESTURL"
      - chmod +x ~/Downloads/"$$LATESTFILENAME"
      - ln -sf "$$LATESTFILENAME" ~/Downloads/OrcaSlicer_Linux_Ubuntu2404_latest.AppImage

  redownload:
    service: setup
    type: setup
    script: &redownload_script
      - echo "REDOWNLOAD"
      - rm -f "$$(readlink -f ~/Downloads/OrcaSlicer_Linux_Ubuntu2404_latest.AppImage)"
      - rm -f ~/Downloads/OrcaSlicer_Linux_Ubuntu2404_latest.AppImage
      - *download_script

  install:
    service: setup-nonet
    type: setup
    script: &install_script
      - VERSION="$${1:-OrcaSlicer_Linux_Ubuntu2404_latest.AppImage}";
      - echo "INSTALL $$VERSION";
      - rm -rf ~/.local/share/orcaslicer &&
        mkdir -p ~/.local/share/orcaslicer ~/.local/share/icons/hicolor/192x192/apps  ~/.local/share/applications ~/.config/OrcaSlicer &&
        cd ~/.local/share/orcaslicer &&
        ~/Downloads/"$$VERSION" --appimage-extract &&
        cp squashfs-root/OrcaSlicer.png ~/.local/share/icons/hicolor/192x192/apps/. &&
        cp squashfs-root/OrcaSlicer.desktop ~/.local/share/applications/OrcaSlicer.desktop &&
        rm -rf ~/.local/share/orcaslicer/tmp

  reinstall:
    service: setup-nonet
    type: setup
    script: &reinstall_script
      - VERSION="$${1:-OrcaSlicer_Linux_Ubuntu2404_latest.AppImage}"
      - echo "REINSTALL $$VERSION"
      - rm -rf ~/.local/share/orcaslicer
      - *install_script

  update-check:
    service: setup
    type: setup
    script:
      - echo "UPDATE CHECK"
      - LATESTURL="$$(curl -s https://api.github.com/repos/SoftFever/OrcaSlicer/releases/latest | jq --raw-output '.assets[] | .browser_download_url' | grep OrcaSlicer_Linux_Ubuntu2404)"
      - LATESTFILENAME="$${LATESTURL##*/OrcaSlicer_Linux_Ubuntu2404_}"
      - mkdir -p ~/Downloads
      - if [ -e ~/Downloads/"$$LATESTFILENAME" ]; then
          echo "No new version";
          exit 0;
        fi
      - echo "File missing, or server-side file newer"
      - exit 1

  update:
    service: setup
    type: setup
    script:
      - echo "UPDATE"
      - *redownload_script
      - *reinstall_script

  orcaslicer:
    service: run
    type: background
    script:
      - echo "ORCASLICER"
      - ~/.local/share/orcaslicer/squashfs-root/bin/orca-slicer "$$@"

    desktop:
      file: |
        [Desktop Entry]
        GenericName=OrcaSlicer
        Name=OrcaSlicer (container)
        StartupWMClass=OrcaSlicer
        MimeType=text/plain;
        Exec=orcaslicer
        Icon=OrcaSlicer
        Type=Application
        Terminal=false
        Categories=Utility;

      icons:
        - source: OrcaSlicer.png
          dest: OrcaSlicer.png

  interactive:
    service: run
    console: true
    script:
      - echo "INTERACTIVE"
      - bash



services:

  ## COMMON PART ##

  common: &common

    image: "cdc-u24"

    entrypoint: ["/cdc/entrypoint"]

    network: none

    working_dir: /home/${USER}
    user: "${USER}"

    environment: &common-env
      LANG: "${LANG}"
      XDG_RUNTIME_DIR: "/tmp/${USER}/run"
      XDG_CURRENT_DESKTOP: "${XDG_CURRENT_DESKTOP}"
      DESKTOP_SESSION: "${DESKTOP_SESSION}"

    cap_drop:
      - ALL

    security_opt:
      - no-new-privileges

    read_only: true
    tmpfs:
      - /tmp
      - /run

    shm_size: "1G"

    volumes: &common-volumes
      - "${CDC_APP_PATH}/home:/home/${USER}:rw"

    devices:
      - "/dev/dri:/dev/dri"

    security_opt:
      - no-new-privileges

    userns_mode: "keep-id"

    network_node: none


  setup:
    <<: *common

    network_mode: bridge

  setup-nonet:
    <<: *common

  run:
    <<: *common

    network_node: bridge
    read_only: false

    user:
      root

    command:
      - ln -sf /usr/lib/x86_64-linux-gnu/libjavascriptcoregtk-4.1.so.0 /usr/lib/x86_64-linux-gnu/libjavascriptcoregtk-4.0.so.18
      - ln -sf /usr/lib/x86_64-linux-gnu/libwebkit2gtk-4.1.so.0 /usr/lib/x86_64-linux-gnu/libwebkit2gtk-4.0.so.37

    x-features:
      - x11
